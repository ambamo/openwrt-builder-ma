################################################
# Description: Build OpenWrt for AX3600 using GitHub Actions
# Uses:
#   imoutowrt/immortalwrt from CNSZTL
#   IPQ807x patchs from Robimarko & Ansuels
#   ECM patches from Bitthief
################################################

name: Build AX3600 with ECM - rmandrad

on:
  repository_dispatch:
    types: [Source_Code_Update_bitthief, Package_Luci_Update]  
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: '30 18 * * 5'

permissions:
  contents: write

env:
  REPO_URL: https://github.com/rmandrad/openwrt
  REPO_BRANCH: qualcommax-6.1-nss
  FEEDS_CONF: AX3600.with.ECM/feeds.conf.ecm
  CONFIG_FILE: AX3600.with.ECM/.config
  DIY_P1_SH: AX3600.with.ECM/diy-part1.sh
  DIY_P2_SH: AX3600.with.ECM/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  TZ: Europe/Paris
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Check server configuration
      run: |
        echo "Warning"
        echo "If the performance of the allocated server is insufficient, be sure to cancel it in time and run it again!"
        echo "CPU models known to be successfully compiled: 8370C, 8171M"
        echo "CPU model known to be underperforming: 8272CL"
        echo -e "------------- ------------CPU information ------------------ ------------------------\n"
        echo "CPU physical quantity: $(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU core and version information: $(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "------------------------------- memory information --------------- ----------------------------"
        echo "Installed memory details:"
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------hard disk information------------------ ----------------------------"
        echo -e "Number of hard drives: $(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "Hard disk details:"
        df -Th
        
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt update -y
        sudo -E apt -y purge azure-cli dotnet* firefox ghc* google* llvm* mono* mysql* openjdk* php* zulu* powershell* msodbc* android*
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /opt/ghc
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a -f

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        # Modify the version number
        echo CONFIG_VERSION_CODE="$(TZ=UTC-1 date "+%Y.%m.%d")" >> openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
    
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "COMPILE_STATUS=success" >> $GITHUB_ENV
        
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        
        echo "FILE_DATE=$(date +"%y.%-m.%-d")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

#    - name: Upload bin directory
#      uses: actions/upload-artifact@main
#      if: env.COMPILE_STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
#      with:
#        name: OpenWrt_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
#        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.COMPILE_STATUS == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "ORGANIZE_STATUS=success" >> $GITHUB_ENV

    - name: Upload firmware to action artifact
      uses: actions/upload-artifact@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware_with_ECM_${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && (!cancelled())
      with:
        tag: v${{ env.FILE_DATE }}-ax3600.ECM
        removeArtifacts: false
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        body: |
            AX3600 ECM             
            Default IP: 192.168.0.1
            Default username: root
            Default password: password
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.GH_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 2
        delete_workflow_pattern: "ECM"

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo:
        keep_latest: 3
        delete_tag_pattern: 'ECM'
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
